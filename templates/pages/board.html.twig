{% extends "base.html.twig" %}

{% block nav %}
{{ include ("modules/navbar.html.twig") }}
{% endblock %}

{% block body %}
<div class="container">
  {% if app.request.hasPreviousSession %}
  {% for message in app.flashes('success') %}
  <div class="alert alert-success">
    {{message}}
  </div>
  {% endfor %}
  {% for message in app.flashes('error') %}
  <div class="alert alert-danger mt-4">
    {{message}}
  </div>
  {% endfor %}
  {% endif %}

  <div class="container">
    <div class="row mt-2">
      <div class="col-12 col-sm-6 col-md-3">
        <div class="info-box">
          <span class="info-box-icon bg-info elevation-1"><i class="fas fa-cog"></i></span>

          <div class="info-box-content">
            <span class="info-box-text">Effectif total</span>
            <span class="info-box-number">
              2096
            </span>
          </div>
          <!-- /.info-box-content -->
        </div>
        <!-- /.info-box -->
      </div>
      <!-- /.col -->
      <div class="col-12 col-sm-6 col-md-3">
        <div class="info-box mb-3">
          <span class="info-box-icon bg-danger elevation-1"><i class="fas fa-thumbs-up"></i></span>

          <div class="info-box-content">
            <span class="info-box-text">MC Effectif</span>
            <span class="info-box-number">1420</span>
          </div>
          <!-- /.info-box-content -->
        </div>
        <!-- /.info-box -->
      </div>
      <!-- /.col -->

      <!-- fix for small devices only -->
      <div class="clearfix hidden-md-up"></div>

      <div class="col-12 col-sm-6 col-md-3">
        <div class="info-box mb-3">
          <span class="info-box-icon bg-success elevation-1"><i class="fas fa-shopping-cart"></i></span>

          <div class="info-box-content">
            <span class="info-box-text">Total Présent</span>
            <span class="info-box-number">2025</span>
          </div>
          <!-- /.info-box-content -->
        </div>
        <!-- /.info-box -->
      </div>
      <!-- /.col -->
      <div class="col-12 col-sm-6 col-md-3">
        <div class="info-box mb-3">
          <span class="info-box-icon bg-warning elevation-1"><i class="fas fa-users"></i></span>

          <div class="info-box-content">
            <span class="info-box-text">MC Présent</span>
            <span class="info-box-number">1345</span>
          </div>
          <!-- /.info-box-content -->
        </div>
        <!-- /.info-box -->
      </div>
      <!-- /.col -->
    </div>
  </div>

  <div class="card">
    <div class="card-header">
      <div class="card-title">
        <h4>Récapitulation Congé/Retard/Heure Sup</h4>
      </div>
      <div class="card-tools">
        <div class="btn-group btn-group-toggle  text-right" data-toggle="buttons">
          <label class="btn  btn-flat btn-default  font-weight-normal">
            <input type="radio" name="options" id="randomizeData" autocomplete="off" checked=""> 30 derniers jours
          </label>
          <label class="btn btn-flat btn-default  font-weight-normal">
            <input type="radio" name="options" id="addDataset" autocomplete="off"> 15 derniers jours
          </label>
          <label class="btn  btn-flat btn-default font-weight-normal">
            <input type="radio" name="options" id="removeDataset" autocomplete="off"> 7 derniers jours
          </label>
        </div>
      </div>
    </div>
    <div class="card-body p-0">

      <canvas id="canvas" height="100"></canvas>
    </div>
  </div>


  <div class="row">
    <div class="col-md-4">
      <div class="card   p-3">
        <div class="card-header">
          <h3 class="card-title">Comparaison avec le mois derniers</h3>
        </div>
        <canvas id="radar" height="450"></canvas>
      </div>
    </div>
    <div class="col-md-8">
      <div class="card">
        <div class="card-header">
          <h3 class="card-title">Par département (7 derniers jours)</h3>
        </div>
        <!-- /.card-header -->
        <div class="card-body">
          <table class="table table-bordered">
            <thead>
              <tr>
                <th>Département</th>
                <th>Congés</th>
                <th>Retard</th>
                <th>Absence</th>
                <th>Embauches</th>
                <th>Debauches</th>
                <th>Total Heure Sup</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>FABRICATION TEXTILE  </td>
                <td>23</td>
                <td>12</td>
                <td>06</td>
                <td>05</td>
                <td>00</td>
                <td>54:30</td>
                
              </tr>
              <tr>
                <td>DIRTRANSIT  </td>
                <td>24</td>
                <td>12</td>
                <td>03</td>
                <td>14</td>
                <td>02</td>
                <td>154:00</td>
                
              </tr>
              <tr>
                <td>APPUI LOGISTIC </td>
                <td>12</td>
                <td>45</td>
                <td>07</td>
                <td>05</td>
                <td>12</td>
                <td>75:30</td>
                
              </tr>
              <tr>
                <td>BUREAU D'ETUDE </td>
                <td>04</td>
                <td>12</td>
                <td>06</td>
                <td>05</td>
                <td>00</td>
                <td>75:30</td>
                
              </tr><tr>
                <td>CONTRÔLE QUALITE </td>
                <td>03</td>
                <td>12</td>
                <td>06</td>
                <td>05</td>
                <td>00</td>
                <td>65:30</td>
                
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
{% endblock %}

{% block  javascripts %}

<script>
  'use strict';
  window.chartColors = {
    red: 'rgb(255, 99, 132)',
    orange: 'rgb(255, 159, 64)',
    yellow: 'rgb(255, 205, 86)',
    green: 'rgb(75, 192, 192)',
    blue: 'rgb(54, 162, 235)',
    purple: 'rgb(153, 102, 255)',
    grey: 'rgb(201, 203, 207)'
  };

  (function (global) {
    var MONTHS = [
      'January',
      'February',
      'March',
      'April',
      'May',
      'June',
      'July',
      'August',
      'September',
      'October',
      'November',
      'December'
    ];

    var COLORS = [
      '#4dc9f6',
      '#f67019',
      '#f53794',
      '#537bc4',
      '#acc236',
      '#166a8f',
      '#00a950',
      '#58595b',
      '#8549ba'
    ];

    var Samples = global.Samples || (global.Samples = {});
    var Color = global.Color;

    Samples.utils = {
      // Adapted from http://indiegamr.com/generate-repeatable-random-numbers-in-js/
      srand: function (seed) {
        this._seed = seed;
      },

      rand: function (min, max) {
        var seed = this._seed;
        min = min === undefined ? 0 : min;
        max = max === undefined ? 1 : max;
        this._seed = (seed * 9301 + 49297) % 233280;
        return min + (this._seed / 233280) * (max - min);
      },

      numbers: function (config) {
        var cfg = config || {};
        var min = cfg.min || 0;
        var max = cfg.max || 1;
        var from = cfg.from || [];
        var count = cfg.count || 8;
        var decimals = cfg.decimals || 8;
        var continuity = cfg.continuity || 1;
        var dfactor = Math.pow(10, decimals) || 0;
        var data = [];
        var i, value;

        for (i = 0; i < count; ++i) {
          value = (from[i] || 0) + this.rand(min, max);
          if (this.rand() <= continuity) {
            data.push(Math.round(dfactor * value) / dfactor);
          } else {
            data.push(null);
          }
        }

        return data;
      },

      labels: function (config) {
        var cfg = config || {};
        var min = cfg.min || 0;
        var max = cfg.max || 100;
        var count = cfg.count || 8;
        var step = (max - min) / count;
        var decimals = cfg.decimals || 8;
        var dfactor = Math.pow(10, decimals) || 0;
        var prefix = cfg.prefix || '';
        var values = [];
        var i;

        for (i = min; i < max; i += step) {
          values.push(prefix + Math.round(dfactor * i) / dfactor);
        }

        return values;
      },

      months: function (config) {
        var cfg = config || {};
        var count = cfg.count || 12;
        var section = cfg.section;
        var values = [];
        var i, value;

        for (i = 0; i < count; ++i) {
          value = MONTHS[Math.ceil(i) % 12];
          values.push(value.substring(0, section));
        }

        return values;
      },

      color: function (index) {
        return COLORS[index % COLORS.length];
      },

      transparentize: function (color, opacity) {
        var alpha = opacity === undefined ? 0.5 : 1 - opacity;
        return Color(color).alpha(alpha).rgbString();
      }
    };

    // DEPRECATED
    window.randomScalingFactor = function () {
      return Math.round(Samples.utils.rand(0, 30));
    };

    // INITIALIZATION

    Samples.utils.srand(Date.now());

    // Google Analytics
    /* eslint-disable */
    if (document.location.hostname.match(/^(www\.)?chartjs\.org$/)) {
      (function (i, s, o, g, r, a, m) {
        i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
          (i[r].q = i[r].q || []).push(arguments)
        }, i[r].l = 1 * new Date(); a = s.createElement(o),
          m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
      })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');
      ga('create', 'UA-28909194-3', 'auto');
      ga('send', 'pageview');
    }
    /* eslint-enable */

  }(this));

  var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  var config = {
    type: 'line',
    data: {
      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
      datasets: [{
        label: 'Congés',
        backgroundColor: window.chartColors.red,
        borderColor: window.chartColors.red,
        data: [
          randomScalingFactor(),
          randomScalingFactor(),
          randomScalingFactor(),
          randomScalingFactor(),
          randomScalingFactor(),
          randomScalingFactor(),
          randomScalingFactor()
        ],
        fill: false,
      }, {
        label: 'Retard',
        fill: false,
        backgroundColor: window.chartColors.blue,
        borderColor: window.chartColors.blue,
        data: [
          randomScalingFactor(),
          randomScalingFactor(),
          randomScalingFactor(),
          randomScalingFactor(),
          randomScalingFactor(),
          randomScalingFactor(),
          randomScalingFactor()
        ],
      }, {
        label: 'Heure Sup',
        fill: false,
        backgroundColor: window.chartColors.yellow,
        borderColor: window.chartColors.yellow,
        data: [
          randomScalingFactor(),
          randomScalingFactor(),
          randomScalingFactor(),
          randomScalingFactor(),
          randomScalingFactor(),
          randomScalingFactor(),
          randomScalingFactor()
        ],
      }]
    },
    options: {
      responsive: true,
      title: {
        display: false,
        text: ''
      },
      tooltips: {
        mode: 'index',
        intersect: false,
      },
      hover: {
        mode: 'nearest',
        intersect: true
      },
      scales: {
        xAxes: [{
          display: true,

        }],
        yAxes: [{
          display: true,

        }]
      }
    }
  };


  var color = Chart.helpers.color;
		var configradar = {
			type: 'radar',
			data: {
				labels: [['Eating', 'Dinner'], ['Drinking', 'Water'], 'Sleeping', ['Designing', 'Graphics'], 'Coding', 'Cycling', 'Running'],
				datasets: [{
					label: 'My First dataset',
					backgroundColor: color(window.chartColors.red).alpha(0.2).rgbString(),
					borderColor: window.chartColors.red,
					pointBackgroundColor: window.chartColors.red,
					data: [
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor()
					]
				}, {
					label: 'My Second dataset',
					backgroundColor: color(window.chartColors.blue).alpha(0.2).rgbString(),
					borderColor: window.chartColors.blue,
					pointBackgroundColor: window.chartColors.blue,
					data: [
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor()
					]
				}]
			},
			options: {
				legend: {
					position: 'bottom',
				},
				title: {
					display: false,
					text: 'Chart.js Radar Chart'
				},
				scale: {
					ticks: {
						beginAtZero: true
					}
				}
			}
		};

		window.onload = function() {
      var ctx = document.getElementById('canvas').getContext('2d');
      window.myLine = new Chart(ctx, config);
			window.myRadar = new Chart(document.getElementById('radar'), configradar);
		};

</script>

{% endblock %}