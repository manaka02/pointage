security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    role_hierarchy:
        ROLE_ADMIN:       ROLE_MANAGER
        ROLE_MANAGER:       [ROLE_SIMPLE,ROLE_FORMATEUR]
        ROLE_FORMATEUR:       ROLE_SIMPLE
    providers:
        from_database:
            entity:
                class: App\Entity\Utilisateur
                property: mail
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: ~
            # provider: users_in_memory

            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path:     /

            access_denied_handler: App\Controller\SecurityController

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

            # http_basic: true
            logout:
                path: /logout
                target: /login

            form_login:
                check_path: login
                username_parameter: _mail
                password_parameter: _pass
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, role: [ROLE_MANAGER,ROLE_ADMIN,ROLE_SIMPLE,ROLE_FORMATEUR] }
        # - { path: ^/profile, roles: ROLE_USER }

    encoders:
        App\Entity\Utilisateur: 
            algorithm: bcrypt
            cost: 12
        App\Models\Utilisateur: 
            algorithm: bcrypt
            cost: 12